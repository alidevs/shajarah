{
  "db_name": "PostgreSQL",
  "query": "\n        SELECT\n            m.id,\n            m.name,\n            m.gender as \"gender: Gender\",\n            m.birthday,\n            m.last_name,\n            m.image,\n            m.image_type,\n            m.personal_info,\n            m.status as \"status: RequestStatus\",\n            mother.id as mother_id,\n            mother.name AS mother_name,\n            mother.gender AS \"mother_gender: Gender\",\n            mother.birthday AS mother_birthday,\n            mother.last_name AS mother_last_name,\n            father.id as father_id,\n            father.name AS father_name,\n            father.gender AS \"father_gender: Gender\",\n            father.birthday AS father_birthday,\n            father.last_name AS father_last_name\n        FROM\n            member_add_requests m\n        LEFT JOIN\n            members mother ON m.mother_id = mother.id\n        LEFT JOIN\n            members father ON m.father_id = father.id\n        WHERE\n            (\n                to_tsvector('simple', \n                    coalesce(m.name, '') || ' ' || \n                    coalesce(m.last_name, '') || ' ' || \n                    coalesce(cast(m.id as text), '') || ' ' ||\n                    coalesce(m.personal_info::text, '') || ' ' ||\n                    coalesce(mother.name, '') || ' ' ||\n                    coalesce(mother.last_name, '') || ' ' ||\n                    coalesce(father.name, '') || ' ' ||\n                    coalesce(father.last_name, '')\n                ) @@ plainto_tsquery('simple', $1)\n                OR\n                (\n                    m.name ILIKE '%' || $1 || '%' OR\n                    m.last_name ILIKE '%' || $1 || '%' OR\n                    cast(m.id as text) LIKE '%' || $1 || '%' OR\n                    m.personal_info::text ILIKE '%' || $1 || '%' OR\n                    coalesce(mother.name, '') ILIKE '%' || $1 || '%' OR\n                    coalesce(mother.last_name, '') ILIKE '%' || $1 || '%' OR\n                    coalesce(father.name, '') ILIKE '%' || $1 || '%' OR\n                    coalesce(father.last_name, '') ILIKE '%' || $1 || '%'\n                )\n            )\n        ORDER BY\n            -- Prioritize exact word matches, then partial matches\n            (\n                CASE \n                    WHEN to_tsvector('simple', \n                        coalesce(m.name, '') || ' ' || \n                        coalesce(m.last_name, '') || ' ' || \n                        coalesce(cast(m.id as text), '') || ' ' ||\n                        coalesce(m.personal_info::text, '') || ' ' ||\n                        coalesce(mother.name, '') || ' ' ||\n                        coalesce(mother.last_name, '') || ' ' ||\n                        coalesce(father.name, '') || ' ' ||\n                        coalesce(father.last_name, '')\n                    ) @@ plainto_tsquery('simple', $1) THEN 1\n                    WHEN m.name ILIKE $1 || '%' OR m.last_name ILIKE $1 || '%' THEN 2  -- Starts with\n                    ELSE 3  -- Contains\n                END\n            ),\n            m.submitted_at DESC,\n            m.name ASC\n        OFFSET $2\n        LIMIT $3;\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "name",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "gender: Gender",
        "type_info": {
          "Custom": {
            "name": "gender",
            "kind": {
              "Enum": [
                "male",
                "female"
              ]
            }
          }
        }
      },
      {
        "ordinal": 3,
        "name": "birthday",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 4,
        "name": "last_name",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "image",
        "type_info": "Bytea"
      },
      {
        "ordinal": 6,
        "name": "image_type",
        "type_info": "Text"
      },
      {
        "ordinal": 7,
        "name": "personal_info",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 8,
        "name": "status: RequestStatus",
        "type_info": {
          "Custom": {
            "name": "request_status",
            "kind": {
              "Enum": [
                "pending",
                "approved",
                "disapproved"
              ]
            }
          }
        }
      },
      {
        "ordinal": 9,
        "name": "mother_id",
        "type_info": "Int8"
      },
      {
        "ordinal": 10,
        "name": "mother_name",
        "type_info": "Text"
      },
      {
        "ordinal": 11,
        "name": "mother_gender: Gender",
        "type_info": {
          "Custom": {
            "name": "gender",
            "kind": {
              "Enum": [
                "male",
                "female"
              ]
            }
          }
        }
      },
      {
        "ordinal": 12,
        "name": "mother_birthday",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 13,
        "name": "mother_last_name",
        "type_info": "Text"
      },
      {
        "ordinal": 14,
        "name": "father_id",
        "type_info": "Int8"
      },
      {
        "ordinal": 15,
        "name": "father_name",
        "type_info": "Text"
      },
      {
        "ordinal": 16,
        "name": "father_gender: Gender",
        "type_info": {
          "Custom": {
            "name": "gender",
            "kind": {
              "Enum": [
                "male",
                "female"
              ]
            }
          }
        }
      },
      {
        "ordinal": 17,
        "name": "father_birthday",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 18,
        "name": "father_last_name",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": [
        "Text",
        "Int8",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      true,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false
    ]
  },
  "hash": "883fa2c6e6ed913ca50ffae0bf340ffa88290551c29432bd389716fb5fc417a1"
}
